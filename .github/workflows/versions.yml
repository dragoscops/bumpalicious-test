name: Test Updating Version

run-name: Test Updating Version ${{ inputs.workspace_distribution }}

on:
  workflow_dispatch: {}
  workflow_call: {}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pr:
          - false
          - true
      max-parallel: 1
    steps:
      - name: Github App Token
        id: app-token-push
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.GH_APP_PUSH_ID }}
          private-key: ${{ secrets.GH_APP_PUSH_KEY }}

      # PAT Settings:
      # - repo (full)
      # Github App:
      # - Content: read & write
      # - Pull Requests: read & write
      # - Administration: read

      - name: Checkout repo (using token)
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token-push.outputs.token || secrets.GH_TOKEN_PUSH }}
          fetch-depth: 0 # Required if youâ€™ll push to an existing branch

      - name: Provision Code
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          set -ex

          #
          # Clean Branch of all Previous Push Attempts
          #

          git pull origin ${{ github.ref_name }}
          rm -rf workspaces* package.json README.md CHANGELOG.md

          git add -A
          git diff-index --quiet HEAD || git commit -m "chore: auto-update [skip ci]"
          git push origin ${{ github.ref_name }}

          tags=$(git tag -l 'v*')
          if [ -n "$tags" ]; then 
            git tag -d $tags \
              && git push --delete origin $tags; 
          fi

          git pull origin ${{ github.ref_name }}
          git fetch

          # Delete all local branches except main
          if git branch | grep -qv 'main$'; then
            git branch | grep -v 'main$' | xargs -n 1 git branch -D
          fi
          # Delete all remote branches except main
          if git branch -r | grep -qv 'origin/main$'; then
            git branch -r | grep -v 'origin/main$' | sed 's/origin\///' | xargs -n 1 git push origin --delete
          fi

          #
          # Set the Ground for a New Test Attempot
          #

          echo "This is the main workspace" > README.md
          echo '{ "version": "0.0.1", "name": "main-workspace" }' > package.json

          mkdir -p workspaces1
          echo "This is a workspaces project 1" > workspaces1/README.md
          echo '{ "version": "0.0.5", "name": "@main-workspace/workspace1" }' > workspaces1/package.json

          mkdir -p workspaces2
          echo "This is a workspaces project 2" > workspaces2/README.md
          echo '{ "version": "0.0.3", "name": "@main-workspace/workspace2" }' > workspaces2/package.json

          git add -A
          git diff-index --quiet HEAD || git commit -m "chore: auto-update [skip ci]"
          git push origin ${{ github.ref_name }}

          git tag v0.0.1
          git push origin v0.0.1

      - name: Providion Git Version
        run: |
          set -ex

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          date > README.md
          date > workspaces1/README.md

          git status
          git diff

          git add -A
          git commit -am "fix: patch commit test"
          git pull origin ${{ github.ref_name }} --ff-only
          git push origin ${{ github.ref_name }}

      - name: Update Version
        uses: dragoscops/bumpalicious@prepare_release
        with:
          github_token: ${{ steps.app-token-push.outputs.token || secrets.GH_TOKEN_PUSH }}
          pr: ${{ matrix.pr }}
          pr_auto_merge: true
          workspaces: .:node

      - name: Validate Version Bump
        run: |
          set -ex

          git fetch

          git tag -l
          git branch -a

          git tag -l | grep v0.0.2
