name: Test Updating Version

run-name: Test Updating Version ${{ inputs.workspace_distribution }}

on:
  workflow_dispatch:
    inputs:
      workspace_distribution:
        description: "Version bump type"
        required: true
        default: "main"
        type: choice
        options:
          - main
          - main-with-pr
          - random
          - random-with-pr
  workflow_call:
    inputs:
      workspace_distribution:
        description: "Version bump type"
        required: true
        default: "main"
        type: string

jobs:
  update-all-versions:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # # Install Deno
      # - name: Setup Deno
      #   uses: denoland/setup-deno@v1
      #   with:
      #     deno-version: v1.x

      # # Install Go
      # - name: Setup Go
      #   uses: actions/setup-go@v4
      #   with:
      #     go-version: "1.21"

      # # Install Node.js
      # - name: Setup Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: "20"

      # # Install Python
      # - name: Setup Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: "3.12"

      # # Install Rust
      # - name: Setup Rust
      #   uses: dtolnay/rust-toolchain@stable
      #   with:
      #     toolchain: stable

      # # Install Zig
      # - name: Setup Zig
      # uses: korandoru/setup-zig@v1
      # with:
      #   zig-version: "0.11.0"

      - name: Update Random 3 Folders
        id: random3
        env:
          GITHUB_TOKEN: ${{ secrets.GH_BUMPALICIOUS_TOKEN }}
        run: |
          # Set username and email for git
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Create an array to hold all project names
          projects=(
            "deno-project-json:deno"
            "deno-project-jsonc:deno"
            "deno-project-jsr:deno"
            # "node-project-package:node"
            # "python-project:python"
            # "go-project:go"
            # "rust-project:rust"
            # "zig-project:zig"
          )

          # # Find all update.md files and extract project names
          # while read -r f; do
          #   d=$(dirname "$f")
          #   d=$(basename "$d")
          #   p=$(echo "$d" | sed -e 's/-.*//' | sed -e 's|^\./||')
          #   projects+=("$d:$p")
          # done < <(find . -name update.md)

          # Print all found projects
          echo "Found ${#projects[@]} projects:"
          printf "  - %s\n" "${projects[@]}"

          # 3 random items from all projects array
          random_projects=()

          if [ ${#projects[@]} -ge 3 ]; then
            # Shuffle projects array and take first 3
            random_projects=($(printf "%s\n" "${projects[@]}" | shuf -n 3))
          else
            # If fewer than 3 projects, use all of them
            random_projects=("${projects[@]}")
          fi

          # Print the selected projects
          echo "Randomly selected projects:"
          printf "  - %s\n" "${random_projects[@]}"

          # Process each selected project
          for project in "${random_projects[@]}"; do
            echo "Processing project: $project"
            IFS=':' read -r dir name <<< "$project"
            date +%s > $dir/update.md
          done

          # Join all random items in a string concatenated with comma
          joined_projects=$(IFS=,; echo "${random_projects[*]}")
          echo "Random projects joined: $joined_projects"

          # Commit changes
          git status
          git add .
          git commit -am "fix: update random projects > $joined_projects"
          git push origin ${{ github.ref }}

          echo "random_projects=$joined_projects" >> $GITHUB_OUTPUT

      - name: Update Repo Version (by Commit)
        if: ${{ inputs.workspace_distribution == 'main' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_BUMPALICIOUS_TOKEN }}
        uses: dragoscops/bumpalicious@2_0_node
        with:
          workspaces: ".:text"

      - name: Update Repo Version (by Pull Request)
        if: ${{ inputs.workspace_distribution == 'main-with-pr' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_BUMPALICIOUS_TOKEN }}
        uses: dragoscops/bumpalicious@2_0_node
        with:
          workspaces: ".:text"
          pr: "true"
          pr_auto_merge: "true"

      - name: Update Workspaces Version (by Commit)
        if: ${{ inputs.workspace_distribution == 'random' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_BUMPALICIOUS_TOKEN }}
        uses: dragoscops/bumpalicious@2_0_node
        with:
          workspaces: ".:text,${{steps.random3.outputs.random_projects}}"

      - name: Update Workspaces Version (by Pull Request)
        if: ${{ inputs.workspace_distribution == 'random-with-pr' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_BUMPALICIOUS_TOKEN }}
        uses: dragoscops/bumpalicious@2_0_node
        with:
          workspaces: ".:text,${{steps.random3.outputs.random_projects}}"
          pr: "true"
          pr_auto_merge: "true"
