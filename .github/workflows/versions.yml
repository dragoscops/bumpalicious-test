name: Test Updating Version

run-name: Test Updating Version ${{ inputs.workspace_distribution }}

on:
  workflow_dispatch:
    inputs:
      pr:
        description: Use PR to push
        type: string
        default: "false"
  workflow_call:
    inputs:
      pr:
        description: Use PR to push
        type: string
        default: "false"

jobs:
  prereqs:
    runs-on: ubuntu-latest
    outputs:
      token: ${{ steps.app-token-push.outputs.token }}
    steps:
      - name: Github App Token
        # if: ${{ inputs.pr == "true" || inputs.pr == true }}
        id: app-token-push
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.GH_APP_PUSH_ID }}
          private-key: ${{ secrets.GH_APP_PUSH_KEY }}

      # - name: Compute Push Token
      #   id: gh-token-push
      #   run: |
      #     if [ "${{ inputs.pr }}" == "true" ]; then
      #       echo "using gihub app token..."
      #       echo "debug=1" >> $GITHUB_OUTPUT
      #     else
      #       echo "using pat..."
      #       echo "token=${{ secrets.GH_TOKEN_PUSH }}" >> $GITHUB_OUTPUT
      #       echo "debug=2" >> $GITHUB_OUTPUT
      #     fi

      # PAT Settings:
      # - repo (full)
      # Github App:
      # - Content: read & write
      # - Pull Requests: read & write
      # - Administration: read

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token-push.outputs.token || secrets.GH_TOKEN_PUSH }}
          fetch-depth: 0 # Required if you’ll push to an existing branch

      # - name: Reconfigure Remote
      #   shell: bash
      #   run: |
      #     REMOTE_REPO="https://x-access-token:${{ inputs.token }}@github.com/${{ github.repository }}.git"
      #     echo "Setting authenticated remote URL..."
      #     git remote set-url origin "$REMOTE_REPO"

      # - name: Provision Code
      #   run: |
      #     git config user.name "github-actions[bot]"
      #     git config user.email "github-actions[bot]@users.noreply.github.com"
      #
      #     set -ex
      #
      #     git pull
      #
      #     echo "This is a test project" > README.md
      #     echo '{ "version": "0.0.1", "name": "single-project" }' > package.json
      #     mkdir workspaces1
      #     echo "This is a workspaces project 1" > workspaces1/README.md
      #     echo '{ "version": "0.0.5", "name": "@main-workspace/workspace1" }' > workspaces1/package.json
      #     mkdir workspaces2
      #     echo "This is a workspaces project 2" > workspaces2/README.md
      #     echo '{ "version": "0.0.31", "name": "@main-workspace/workspace2" }' > workspaces2/package.json
      #
      #     git add -A
      #     git diff-index --quiet HEAD || git commit -m "chore: auto-update [skip ci]"
      #     git push
      #
      #     git tag v0.0.1
      #     git push origin v0.0.1

  bumpalicious:
    runs-on: ubuntu-latest
    needs: prereqs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ needs.prereqs.outputs.token || secrets.GH_TOKEN_PUSH }}
          fetch-depth: 0

      # - name: Providion Git Version
      #   run: |
      #     git config user.name "github-actions[bot]"
      #     git config user.email "github-actions[bot]@users.noreply.github.com"
      #
      #     git pull --ff-only
      #     echo "" > package.json
      #
      #     git add -A
      #     git commit -am "chore: update"
      #     git push

      # - name: Update Workspaces Version (by Pull Request)
      #   if: ${{ inputs.workspace_distribution == 'workspaces-with-pr' }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_BUMPALICIOUS_TOKEN }}
      #   uses: dragoscops/bumpalicious@2_0_node
      #   with:
      #     workspaces: ".:text,${{steps.workspaces3.outputs.workspaces_projects}}"
      #     pr: "true"
      #     pr_auto_merge: "true"

  cleanup:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs:
      - prereqs
      - bumpalicious
    steps:
      - name: Checkout repo
        if: ${{ always() }}
        uses: actions/checkout@v4
        with:
          token: ${{ needs.prereqs.outputs.token || secrets.GH_TOKEN_PUSH }}
          fetch-depth: 0 # Required if you’ll push to an existing branch

      - name: Clean Repo
        if: ${{ always() }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          set -ex

          git pull

          rm -rf workspaces* package.json README.md

          git add -A
          git diff-index --quiet HEAD || git commit -m "chore: auto-update [skip ci]"

          git push

          git pull

          git push --delete origin v0.0.1
